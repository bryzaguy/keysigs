{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["pickRandom","arr","Math","ceil","random","length","prizeLink","major_letters","sort","minor_letters","map","l","toLowerCase","types","clefs","fails","solved","play","lastResult","type","letters","letter","clef","KeySignature","key","split","style","fontSize","pointerEvents","App","useState","count","setState","cssLetter","i","replace","join","className","onClick","e","win","target","textContent","streak","push","console","log","lastLetter","background","visibility","undefined","href","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bd872cc.chunk.js","sourcesContent":["import \"./App.css\";\nimport { Fragment, useState } from \"react\";\n\nconst pickRandom = (arr) => arr[Math.ceil(Math.random() * arr.length) - 1];\n\n// Streak score\n// Time multiplier\n\nconst prizeLink =\n  \"https://docs.google.com/document/d/1e8bCDXDnz1Y-qnNY2vTknYMVThinHRO2Ur9eF1V1DZk/edit?usp=sharing\";\n\nconst major_letters = [\n  \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"C#\", \"F#\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"Gb\",\n].sort();\n\nconst minor_letters = [\n  \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A#\", \"C#\", \"D#\", \"F#\", \"G#\", \"Ab\", \"Bb\", \"Eb\",\n].map(l => l.toLowerCase()).sort();\n\nconst types = [\"maj\", \"min\"];\nconst clefs = [\"treble\", \"bass\"];\nconst fails = ['Sorry', 'So close', ':(', 'Ouch', 'Whoops', 'Dang!', 'Answer']\n// const levels = ['Major', 'Minor', 'Both']\nconst currentLevel = 0\nconst solved = []\n\nconst play = (lastResult) => {\n  const type = currentLevel < 2 ? types[currentLevel] : pickRandom(types)\n  const letters = type === \"maj\" ? major_letters : minor_letters\n  const letter = pickRandom(letters)\n  const clef = pickRandom(clefs)\n\n  return { clef, type, letter, letters, lastResult }\n};\n\nfunction KeySignature ({letter: key}) {\n  return (\n    <Fragment>{key.split('')[0]}<span style={{\n      fontSize: '0.75em', pointerEvents: 'none'\n    }}>{key.split('')[1] || ''}</span></Fragment>\n  )\n}\n\nfunction App() {\n  const [{ clef, type, letter, letters, lastResult }, setState] = useState(\n    play({count: 0})\n  )\n\n  const cssLetter = letter.split('').map(\n    (l, i) => i < 1 ? l : l.replace(\"#\", \"s\").replace(\"b\", \"f\")\n  ).join('')\n  const className = `${clef}-${cssLetter.toLowerCase()}-${type}`\n\n  const onClick = (e) => {\n    const win = e.target.textContent === letter\n    const count = lastResult.count + 1\n    const streak = win ? (lastResult.streak || 0) + 1 : 0\n    win && solved.push(letter)\n\n    console.log(e.target.textContent, letter)\n\n    setState(play({ count, streak, win, lastLetter: letter }))\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className='Result' style={{\n            background: lastResult.win ? 'green' : 'red',\n            visibility: lastResult.win !== undefined ? 'inherit' : 'hidden'\n          }}>\n          <div>{lastResult.win ? (\n            lastResult.streak > 1 ? `${lastResult.streak} POINT STREAK!`: 'NICE!'\n          ) : `${pickRandom(fails)}...${lastResult.lastLetter}`}</div>\n        </div>\n        <div className={`App-logo ${className}`} />\n        <div className=\"Answers\">\n          {letters.map((key) => (\n            <button key={key} onClick={onClick}>\n              <KeySignature letter={key} />\n            </button>\n          ))}\n        </div>\n      </header>\n      <a href={prizeLink} style={{ display: \"none\" }}>\n        {prizeLink}\n      </a>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}