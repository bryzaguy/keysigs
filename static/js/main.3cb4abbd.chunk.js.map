{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["bonusTimer","random","range","Math","ceil","pickRandom","arr","length","major_letters","sort","minor_letters","map","l","toLowerCase","clefs","fails","wins","levels","solved","play","previous","letters","currentLevel","concat","letter","filter","indexOf","type","clef","giphy","search","fetch","then","a","json","data","b","images","fixed_height","url","height","original","frames","success","fail","ready","allPromises","Promise","all","Button","onClick","children","style","fontSize","padding","marginTop","LoadImages","width","position","overflow","src","LevelStars","level","levelsCompleted","className","_","levelIndex","isCurrentLevel","isComplete","color","animation","join","isPlayable","border","borderRadius","boxShadow","backgroundColor","opacity","textShadow","fontWeight","Star","xmlns","viewBox","fill","stroke","d","KeySignature","key","split","first","second","KeySignatureButtons","Banner","display","flexDirection","alignItems","transition","LevelHeader","score","remainingCount","margin","KeySignatureImage","cssLetter","replace","Prize","href","target","rel","RobotoFont","App","useState","game","setGame","title","banner","setBanner","bonus","setBonus","JSON","parse","localStorage","getItem","stats","setStats","loaded","setLoaded","highScore","setTimeout","splash","useEffect","streak","clearTimeout","letterButtons","background","zIndex","setItem","stringify","maxWidth","e","win","textContent","count","losses","push","max","lastLetter","parseInt","wait","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wJAqHIA,E,qEAjHEC,EAAS,SAACC,GAAD,OAAWC,KAAKC,KAAKD,KAAKF,SAAWC,GAAS,GACvDG,EAAa,SAACC,GAAD,OAASA,EAAIL,EAAOK,EAAIC,UAKrCC,EAAgB,CACpB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACAC,OAEIC,EAAgB,CACpB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAECC,KAAI,SAACC,GAAD,OAAOA,EAAEC,iBACbJ,OAEGK,EAAQ,CAAC,SAAU,QACnBC,EAAQ,CACZ,QACA,WACA,KACA,OACA,SACA,SACA,OACA,SACA,SACA,QAEIC,EAAO,CACX,QACA,QACA,UACA,OACA,UACA,QACA,aACA,QACA,SAEIC,EAAS,CAAC,QAAS,QAAS,QAE9BC,EAAS,GAEPC,EAAO,SAACC,GACZ,IACMC,EADkB,CAACb,EAAeE,GAAeU,EAASE,eAC7Bd,EAAce,OAAOb,GAClDc,EAASnB,EAAWgB,EAAQI,QAAO,SAACb,GAAD,OAA8B,IAAvBM,EAAOQ,QAAQd,OACzDe,EAAOnB,EAAckB,QAAQF,IAAW,EAAI,MAAQ,MAG1D,MAAO,CAAEI,KAFIvB,EAAWS,GAETa,OAAMH,SAAQH,UAASD,aAIlCS,EAAQ,SAACC,GAAD,OACZC,MAAM,gDAAD,OAFa,mCAEb,cAC8DD,EAD9D,4BACwF7B,EACzF,KAFC,sBAKF+B,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GAAD,OACJA,EAAEE,KAAKxB,KAAI,SAACyB,GAAD,MAAO,CAChBA,EAAEC,OAAOC,aAAaC,IACtBH,EAAEC,OAAOC,aAAaE,OACtBJ,EAAEC,OAAOI,SAASC,eAItBL,EAAS,CACXM,QAAS,GACTC,KAAM,GACNC,MAAO,IAGHC,EAAcC,QAAQC,IAAI,CAC9BnB,EAAM,WACNA,EAAM,QACNA,EAAM,WA2OR,SAASoB,EAAT,GAAwC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAEzB,OACE,wBAAQC,MAFI,CAAEC,SAAU,SAAUC,QAAS,OAAQC,UAAW,QAExCL,QAASA,EAA/B,SACGC,IAKP,SAASK,IACP,MAAiCnB,EAAzBM,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,MACvB,OACE,qBACEO,MAAO,CAAEZ,OAAQ,EAAGiB,MAAO,EAAGC,SAAU,WAAYC,SAAU,UADhE,SAGGhB,EACEpB,OAAOqB,GACPrB,OAAOsB,GACPlC,KAAI,SAAC4B,GAAD,OACH,qBAAeqB,IAAKrB,GAAVA,QAMpB,SAASsB,EAAT,GAAqE,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,gBAAuC,IAAtBb,eAAsB,MAAZ,aAAY,EAClE,OACE,qBAAKc,UAAU,aAAf,SACG/C,EAAON,KAAI,SAACsD,EAAGC,GACd,IAAMC,EAAiBL,IAAUI,EAC3BE,EAAaF,EAAaH,EAC1BM,EAAQD,EACV,QACAD,EACA,WACA,YACEG,EAAY,CAACF,GAAc,MAAOD,GAAkB,SACvD1C,QAAO,SAACQ,GAAD,OAAOA,KACdsC,KAAK,KAEFC,EAAaN,GAAcH,EAE3BX,EAAQ,CACZqB,OAAQ,8BACRnB,QAAS,iBACToB,aAAc,MACdC,UAAU,0BAAD,OACPR,EAAiB,OAAS,OADnB,KAGTS,gBAAiB,oBACjBC,SAAUL,GAAc,KAW1B,OACE,uBAEER,UAAU,YACVZ,MAAOA,EACPF,QAPiB,kBAAMsB,GAActB,EAAQgB,IAG/C,UAME,uBAAMd,MAfQ,CAChB0B,WAAY,+BACZC,WAAY,MACZV,MAAO,SAYL,mBAA+BH,EAAa,EAA5C,OANF,QAOE,cAACc,EAAD,CAAMX,MAAOA,EAAOC,UAAWA,MAN1BJ,QAcjB,SAASc,EAAT,GAAqC,IAArBX,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,UACrB,OACE,qBACEN,UAAS,eAAUM,GACnBW,MAAM,6BACNxB,MAAM,KACNjB,OAAO,KACP0C,QAAQ,YALV,SAOE,sBACE9B,MAAO,CACL+B,KAAMd,EACNe,OAAQ,SAEVC,EAAG,CACD,MACA,aACA,QACA,QACA,cACA,QACA,OACA,0BACA,QACA,0BACA,gBACAd,KAAK,SAMf,SAASe,EAAT,GAAkD,IAAlBC,EAAiB,EAAzB/D,OAAa2B,EAAY,EAAZA,SACnC,EAAwBoC,EAAIC,MAAM,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,OACE,iCACGvC,EACAsC,EACD,sBAAMzB,UAAU,aAAhB,SAA8B0B,GAAU,QAK9C,SAASC,EAAT,GAAoD,IAArBtE,EAAoB,EAApBA,QAAS6B,EAAW,EAAXA,QACtC,OACE,qBAAKc,UAAU,UAAf,SACG3C,EAAQV,KAAI,SAAC4E,GAAD,OACX,wBAAkBrC,QAASA,EAA3B,SACE,cAACoC,EAAD,CAAc9D,OAAQ+D,KADXA,QAQrB,SAASK,EAAT,GAA8C,IAA5BvB,EAA2B,EAA3BA,MAAO7B,EAAoB,EAApBA,OAAQW,EAAY,EAAZA,SAC/B,OACE,qBAAKa,UAAU,SAASZ,MAAO,CAAEwB,gBAAiBP,GAAS,aAA3D,SACE,qBACEjB,MAAO,CACLM,SAAU,WACVmC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,WAAY,OACZrC,SAAU,SACVnB,OAAQA,GAAU,QARtB,SAWGW,MAMT,SAAS8C,EAAT,GAAiD,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,eAC5B,OACE,qBAAI/C,MAAO,CAAE2B,WAAY,IAAK1B,SAAU,UAAW+C,OAAQ,QAA3D,oBACUF,GAAS,EADnB,KACwBC,EADxB,YAMJ,SAASE,EAAT,GAAoD,IAAvB7E,EAAsB,EAAtBA,OAAQI,EAAc,EAAdA,KAAMD,EAAQ,EAARA,KACzC,EAAwBH,EAAOgE,MAAM,IAArC,mBAEMc,EAFN,YAC6B,IAAIC,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAE1DvC,EAAS,UAAMpC,EAAN,YAAc0E,EAAUzF,cAAxB,YAAyCc,GAExD,OACE,qBAAKqC,UAAU,uBAAf,SACE,qBAAKA,UAAS,sBAAiBA,OAKrC,SAASwC,IACP,OACE,mBACEC,KAlgBJ,mGAmgBIC,OAAO,SACPC,IAAI,aACJvD,MAAO,CAAEiB,MAAO,SAJlB,mCAWJ,SAASuC,IACP,OACE,eAAC,WAAD,WACE,sBAAMD,IAAI,aAAaF,KAAK,8BAC5B,sBACEA,KAAK,gFACLE,IAAI,eAEN,gCAAQ,iCA3ad7D,EAAYd,MAAK,YAA6B,IAAD,mBAA1BW,EAA0B,KAAjBC,EAAiB,KAAXC,EAAW,KAC3CR,EAAS,CAAEM,UAASC,OAAMC,YA+abgE,MA1af,WACE,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,CAAEG,MAAO,eAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BL,mBAAS,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACA,EAA0BP,mBAASQ,KAAKC,MAAMC,aAAaC,QAAQ,WAAnE,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4Bb,oBAAS,GAArC,mBAAOc,EAAP,KAAeC,EAAf,KAEI,EAA2DH,GAAS,GAAxE,IAAMpG,oBAAN,MAAqB,EAArB,MAAwByC,uBAAxB,MAA0C,EAA1C,MAA6C+D,iBAA7C,MAAyD,EAAzD,EAEKF,GACH9E,EAAYd,MAAK,WACf+F,YAAW,WACTF,GAAU,GACVV,EAAU,CACRF,MAAO,SACPe,OAAQ3H,EAAWgC,EAAOQ,WAE3B,QAIP,MAA4DkE,GAAQ,GAA5DnF,EAAR,EAAQA,KAAMD,EAAd,EAAcA,KAAMH,GAApB,EAAoBA,OAApB,KAA4BH,gBAA5B,OAAsC,GAAtC,QAA0CD,iBAA1C,OAAqD,GAArD,GACM+E,GAAiB9E,GAAQd,OAASW,EAAOX,OAE/C0H,qBAAU,WACR,GAAIb,EAAQ,EAaV,OAZApH,EAAa+H,YAAW,WACtBV,EAASD,EAAQ,GACjBD,EAAU,CACRF,MACE,uBAAM7D,MAAO,CAAEC,SAAU,WAAzB,UACiB,IAAb+D,EAAQ,GAAUhG,GAAS8G,OAD/B,mBAIF7D,MAAO,YAER,KAEI,kBAAM8D,aAAanI,OAI9B,IA8HA,GAAsBkH,EAAOc,QAAU,GAAvC,qBAAOzF,GAAP,MAAYC,GAAZ,MACM4F,GAAyB,QAATzG,EAAiBnB,EAAgBE,EAEvD,OACE,sBAAKsD,UAAU,MAAf,UACE,cAAC4C,EAAD,IACA,yBAAQ5C,UAAU,aAAlB,UACE,sBAAKZ,MAAO,CACViF,WAAYnB,EAAO7C,OAAS,YAC5B2B,WAAY,OACZsC,OAAQ,EACR7E,MAAO,QAJT,UAMA,cAACI,EAAD,CACEC,MAAOxC,EACPyC,gBAAiBA,EACjBb,QA5Ba,SAACgB,GACpB5C,EAAe4C,EACf8C,EAAQ,MACRK,EAAS,GACTc,aAAanI,GACbA,EAAa,KACb,IAAM0H,EAAQ,CAAEpG,eAAcyC,kBAAiB+D,aAC/CN,aAAae,QAAQ,QAASjB,KAAKkB,UAAUd,IAC7CC,EAASD,GACTP,EAAU,CAAEF,MAAO,SAAUe,OAAQ3H,EAAWgC,EAAOQ,YAqBnD,qBAAIO,MAAO,CACTiB,MAAO,QACP+B,OAAQ,aACRtB,WAAY,4BAHd,yBAKegD,QAGf,eAAClC,EAAD,CACEvB,MAAO6C,EAAO7C,MACd7B,OAAQA,IAAM,eAAYA,GAAZ,gBAFhB,UAIG0E,EAAOD,MACP1E,IACC,qBAAKqB,IAAKrB,GAAKa,MAAO,CAAEqF,SAAU,OAAQlF,UAAW,eAGxD/B,IACC,eAAC,WAAD,WACE,cAAC6E,EAAD,CAAmB7E,OAAQA,GAAQI,KAAMA,EAAMD,KAAMA,IACrD,cAACsE,EAAD,CACEC,MAAO9E,GAAS8E,MAChBC,eAAgBA,MAEhBe,EAAOc,QACP,cAACrC,EAAD,CAAqBtE,QAAS+G,GAAelF,QAzKzC,SAACwF,GACf,IAAIC,EAAMD,EAAEhC,OAAOkC,cAAgBpH,GAC7BqH,EAAQzH,GAASyH,MAAQ,EACzBX,EAASS,GAAOvH,GAAS8G,QAAU,GAAK,EAAI,EAC5CY,EAAUH,EAAmC,GAA5BvH,GAAS0H,QAAU,GAAK,EAEzC5C,EAA2B,KADRgC,EAAiB,GAARd,IACMhG,GAAS8E,OAAS,GAG1D,GAFAyC,GAAOzH,EAAO6H,KAAKvH,IAEfN,EAAOX,SAAWc,GAAQd,OAAQ,CACpCW,EAAS,GACL6C,EAAkB,GAAKzC,IAAiByC,IAC1CzC,GAA8B,EAC9ByC,GAAoC,GAEtC+D,EAAY3H,KAAK6I,IAAIlB,EAAW5B,GAChC,IAAMwB,EAAQ,CAAEpG,eAAcyC,kBAAiB+D,aAC/CN,aAAae,QAAQ,QAASjB,KAAKkB,UAAUd,IAC7CC,EAASD,GACTP,EAAU,CACRF,MAA2B,IAApBlD,EAAwB,cAACyC,EAAD,IAAYnG,EAAWW,GACtDgH,OAAQ3H,EAAWgC,EAAOM,SAC1B0B,MAAO,UAET2C,EAAQ,MACRK,EAAS,GACTc,aAAanI,GACbA,EAAa,UAEb,GAAI2I,EAAK,CACP,IAAMtE,EAAQ,QACV6D,EAAS,GACXC,aAAanI,GACbA,EAAa,KACbqH,EAASD,EAAQ,GACjBD,EAAU,CACRF,MACE,uBAAM7D,MAAO,CAAEC,SAAU,WAAzB,UACG6E,EAAuB,IAAbd,EAAQ,GADrB,mBAIF/C,WAGF8C,EAAU,CAAEF,MAAO5G,EAAWW,GAAOqD,UAEvC2C,EACE7F,EAAK,CACH0H,QACAX,SACAY,SACAH,MACAzC,QACA+C,WAAYzH,GACZF,sBAGC,CACL+F,EAAS,GACTc,aAAanI,GACbA,EAAa,KAEb,IAAM4C,EAAO,CACXqE,MACE,eAAC3B,EAAD,CAAc9D,OAAQA,GAAtB,UAA+BnB,EAAWU,GAA1C,SAEFsD,MAAO,OAGH2D,EAAS3H,EAAWgC,EAAOO,MACjCuE,EAAU,aACRa,OAAQA,GACLpF,IAEL,IAAMF,EAASwG,SAASlB,EAAO,IAGzBmB,EAAOhJ,KAAK6I,IAAItG,GAFV,IAAO,IACH,IAC8B,KAC9CqF,YAAW,WACTZ,EAAUvE,GACVoE,EACE7F,EAAK,CACH0H,QACAX,SACAY,SACAH,MACAzC,QACA+C,WAAYzH,GACZF,oBAGH6H,UAkFM,MAARpC,GAAgB,cAAC9D,EAAD,CAAQC,QA7EX,WAClBiE,EAAU,CAAEF,MAAO,QACnBI,EAAS,GACTc,aAAanI,GACbA,EAAa,KACbgH,EAAQ7F,EAAK,CAAE0H,MAAO,EAAGvH,mBAwEJ,mBACR,MAARyF,GACC,wBAAQ3D,MAAO,CAAEG,UAAW,QAAUL,QAvEzB,WACnBsE,aAAa4B,WAAW,SACxBzB,EAAS,MACTX,EAAQ,MACRK,EAAS,GACTc,aAAanI,GACbA,EAAa,KACbmH,EAAU,CAAEF,MAAO,SAAUe,OAAQ3H,EAAWgC,EAAOQ,UAgEjD,0BAKH+E,GAAU,cAACpE,EAAD,QCzUF6F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvH,MAAK,YAAkD,IAA/CwH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3cb4abbd.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\nimport \"./App.css\";\nimport { Fragment, useEffect, useState } from \"react\";\n\nconst random = (range) => Math.ceil(Math.random() * range) - 1;\nconst pickRandom = (arr) => arr[random(arr.length)];\n\nconst prizeLink =\n  \"https://docs.google.com/document/d/1e8bCDXDnz1Y-qnNY2vTknYMVThinHRO2Ur9eF1V1DZk/edit?usp=sharing\";\n\nconst major_letters = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"C#\",\n  \"F#\",\n  \"Ab\",\n  \"Bb\",\n  \"Cb\",\n  \"Db\",\n  \"Eb\",\n  \"Gb\",\n].sort();\n\nconst minor_letters = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"A#\",\n  \"C#\",\n  \"D#\",\n  \"F#\",\n  \"G#\",\n  \"Ab\",\n  \"Bb\",\n  \"Eb\",\n]\n  .map((l) => l.toLowerCase())\n  .sort();\n\nconst clefs = [\"treble\", \"bass\"];\nconst fails = [\n  \"Sorry\",\n  \"So close\",\n  \":(\",\n  \"Ouch\",\n  \"Whoops\",\n  \"Oopsie\",\n  \"Dang\",\n  \"Answer\",\n  \"Bummer\",\n  \"Crap\",\n];\nconst wins = [\n  \"Nice!\",\n  \"Cool!\",\n  \"Huzzah!\",\n  \"Pow!\",\n  \"Booyah!\",\n  \"Zing!\",\n  \"Cha-ching!\",\n  \"Dope!\",\n  \"Sick!\",\n];\nconst levels = [\"Major\", \"Minor\", \"Both\"];\n\nvar solved = [];\n\nconst play = (previous) => {\n  const current_letters = [major_letters, minor_letters][previous.currentLevel];\n  const letters = current_letters || major_letters.concat(minor_letters);\n  const letter = pickRandom(letters.filter((l) => solved.indexOf(l) === -1));\n  const type = major_letters.indexOf(letter) > -1 ? \"maj\" : \"min\";\n  const clef = pickRandom(clefs);\n\n  return { clef, type, letter, letters, previous };\n};\n\nconst giphyApiKey = \"6RG4B2rBB6eP4QCDrxs7w0uZnflH6n9z\";\nconst giphy = (search) =>\n  fetch(\n    `https://api.giphy.com/v1/gifs/search?api_key=${giphyApiKey}&q=${search}&limit=20&offset=${random(\n      1000\n    )}&rating=g&lang=en`\n  )\n    .then((a) => a.json())\n    .then((a) =>\n      a.data.map((b) => [\n        b.images.fixed_height.url,\n        b.images.fixed_height.height,\n        b.images.original.frames,\n      ])\n    );\n\nvar images = {\n  success: [],\n  fail: [],\n  ready: [],\n};\n\nconst allPromises = Promise.all([\n  giphy(\"success\"),\n  giphy(\"fail\"),\n  giphy(\"ready\"),\n]);\nallPromises.then(([success, fail, ready]) => {\n  images = { success, fail, ready };\n});\n\nvar bonusTimer;\n\nfunction App() {\n  const [game, setGame] = useState(null);\n  const [banner, setBanner] = useState({ title: \"Loading...\" });\n  const [bonus, setBonus] = useState(0);\n  const [stats, setStats] = useState(JSON.parse(localStorage.getItem(\"stats\")));\n  const [loaded, setLoaded] = useState(false);\n\n  var { currentLevel = 0, levelsCompleted = 0, highScore = 0 } = stats || {};\n\n  if (!loaded) {\n    allPromises.then(() => {\n      setTimeout(() => {\n        setLoaded(true);\n        setBanner({\n          title: \"Ready?\",\n          splash: pickRandom(images.ready),\n        });\n      }, 500);\n    });\n  }\n\n  const { clef, type, letter, letters = [], previous = {} } = game || {};\n  const remainingCount = letters.length - solved.length;\n\n  useEffect(() => {\n    if (bonus > 0) {\n      bonusTimer = setTimeout(() => {\n        setBonus(bonus - 1);\n        setBanner({\n          title: (\n            <span style={{ fontSize: \"smaller\" }}>\n              {(bonus - 1) * 10 + previous.streak}x Multiplier!\n            </span>\n          ),\n          color: \"green\",\n        });\n      }, 1000);\n\n      return () => clearTimeout(bonusTimer);\n    }\n  });\n\n  const onClick = (e) => {\n    var win = e.target.textContent === letter;\n    const count = previous.count + 1;\n    const streak = win ? (previous.streak || 0) + 1 : 0;\n    const losses = !win ? (previous.losses || 0) + 1 : 0;\n    const pointsMultiplier = streak + bonus * 10;\n    const score = pointsMultiplier * 100 + (previous.score || 0);\n    win && solved.push(letter);\n\n    if (solved.length === letters.length) {\n      solved = [];\n      if (levelsCompleted < 3 && currentLevel === levelsCompleted) {\n        currentLevel = currentLevel + 1;\n        levelsCompleted = levelsCompleted + 1;\n      }\n      highScore = Math.max(highScore, score);\n      const stats = { currentLevel, levelsCompleted, highScore };\n      localStorage.setItem(\"stats\", JSON.stringify(stats));\n      setStats(stats);\n      setBanner({\n        title: levelsCompleted === 3 ? <Prize /> : pickRandom(wins),\n        splash: pickRandom(images.success),\n        color: \"green\",\n      });\n      setGame(null);\n      setBonus(0);\n      clearTimeout(bonusTimer);\n      bonusTimer = null;\n    } else {\n      if (win) {\n        const color = \"green\";\n        if (streak > 1) {\n          clearTimeout(bonusTimer);\n          bonusTimer = null;\n          setBonus(bonus + 2);\n          setBanner({\n            title: (\n              <span style={{ fontSize: \"smaller\" }}>\n                {streak + (bonus + 2) * 10}x Multiplier!\n              </span>\n            ),\n            color,\n          });\n        } else {\n          setBanner({ title: pickRandom(wins), color });\n        }\n        setGame(\n          play({\n            count,\n            streak,\n            losses,\n            win,\n            score,\n            lastLetter: letter,\n            currentLevel,\n          })\n        );\n      } else {\n        setBonus(0);\n        clearTimeout(bonusTimer);\n        bonusTimer = null;\n\n        const fail = {\n          title: (\n            <KeySignature letter={letter}>{pickRandom(fails)}...</KeySignature>\n          ),\n          color: \"red\",\n        };\n\n        const splash = pickRandom(images.fail);\n        setBanner({\n          splash: splash,\n          ...fail,\n        });\n        const frames = parseInt(splash[2]);\n        const fps = 1000 / 15;\n        const latency = 1000;\n        const wait = Math.max(frames * fps + latency, 5000);\n        setTimeout(() => {\n          setBanner(fail);\n          setGame(\n            play({\n              count,\n              streak,\n              losses,\n              win,\n              score,\n              lastLetter: letter,\n              currentLevel,\n            })\n          );\n        }, wait);\n      }\n    }\n  };\n\n  const onPlayClick = () => {\n    setBanner({ title: \"GO!\" });\n    setBonus(0);\n    clearTimeout(bonusTimer);\n    bonusTimer = null;\n    setGame(play({ count: 0, currentLevel }));\n  };\n\n  const onResetClick = () => {\n    localStorage.removeItem(\"stats\");\n    setStats(null);\n    setGame(null);\n    setBonus(0);\n    clearTimeout(bonusTimer);\n    bonusTimer = null;\n    setBanner({ title: \"Ready?\", splash: pickRandom(images.ready) });\n  };\n\n  const onLevelClick = (levelIndex) => {\n    currentLevel = levelIndex;\n    setGame(null);\n    setBonus(0);\n    clearTimeout(bonusTimer);\n    bonusTimer = null;\n    const stats = { currentLevel, levelsCompleted, highScore };\n    localStorage.setItem(\"stats\", JSON.stringify(stats));\n    setStats(stats);\n    setBanner({ title: \"Ready?\", splash: pickRandom(images.ready) });\n  };\n\n  const [url, height] = banner.splash || [];\n  const letterButtons = type === \"maj\" ? major_letters : minor_letters;\n\n  return (\n    <div className=\"App\">\n      <RobotoFont />\n      <header className=\"App-header\">\n        <div style={{\n          background: banner.color || 'lightgrey',\n          transition: '0.5s',\n          zIndex: 1,\n          width: '100%'\n        }}>\n        <LevelStars\n          level={currentLevel}\n          levelsCompleted={levelsCompleted}\n          onClick={onLevelClick}\n        />\n        <h4 style={{\n          color: \"white\",\n          margin: \"0 0 0.5rem\",\n          textShadow: '0 0 5px rgba(0,0,0,0.25)'\n        }}>\n          High Score: {highScore}\n        </h4>\n        </div>\n        <Banner\n          color={banner.color}\n          height={height && `calc(${height}px + 3.5rem)`}\n        >\n          {banner.title}\n          {url && (\n            <img src={url} style={{ maxWidth: \"100%\", marginTop: \"0.5rem\" }} />\n          )}\n        </Banner>\n        {letter && (\n          <Fragment>\n            <KeySignatureImage letter={letter} clef={clef} type={type} />\n            <LevelHeader\n              score={previous.score}\n              remainingCount={remainingCount}\n            />\n            {!banner.splash && (\n              <KeySignatureButtons letters={letterButtons} onClick={onClick} />\n            )}\n          </Fragment>\n        )}\n        {game == null && <Button onClick={onPlayClick}>Play!</Button>}\n        {game == null && (\n          <button style={{ marginTop: \"2rem\" }} onClick={onResetClick}>\n            Reset All\n          </button>\n        )}\n      </header>\n      {loaded && <LoadImages />}\n    </div>\n  );\n}\n\nfunction Button({ onClick, children }) {\n  const style = { fontSize: \"1.5rem\", padding: \"1rem\", marginTop: '1rem' }\n  return (\n    <button style={style} onClick={onClick}>\n      {children}\n    </button>\n  );\n}\n\nfunction LoadImages() {\n  const { success, fail, ready } = images;\n  return (\n    <div\n      style={{ height: 0, width: 0, position: \"absolute\", overflow: \"hidden\" }}\n    >\n      {success\n        .concat(fail)\n        .concat(ready)\n        .map((url) => (\n          <img key={url} src={url} />\n        ))}\n    </div>\n  );\n}\n\nfunction LevelStars({ level, levelsCompleted, onClick = () => {} }) {\n  return (\n    <div className=\"LevelStars\">\n      {levels.map((_, levelIndex) => {\n        const isCurrentLevel = level === levelIndex;\n        const isComplete = levelIndex < levelsCompleted;\n        const color = isComplete\n          ? \"green\"\n          : isCurrentLevel\n          ? \"darkgrey\"\n          : \"lightgrey\";\n        const animation = [isComplete && \"wow\", isCurrentLevel && \"pulse\"]\n          .filter((a) => a)\n          .join(\" \");\n\n        const isPlayable = levelIndex <= levelsCompleted;\n\n        const style = {\n          border: \"1px solid rgb(0, 0, 0, 0.1)\",\n          padding: \"0.25rem 0.5rem\",\n          borderRadius: \"3px\",\n          boxShadow: `2px 4px 6px rgba(0,0,0,${\n            isCurrentLevel ? \"0.35\" : \"0.15\"\n          })`,\n          backgroundColor: 'rgba(0,0,0,0.025)',\n          opacity: !isPlayable && 0.25,\n        };\n\n        const textStyle = {\n          textShadow: '0px 0px 10px rgb(0,0,0,0.15)',\n          fontWeight: '400',\n          color: 'white'\n        }\n\n        const onLevelClick = () => isPlayable && onClick(levelIndex);\n\n        return (\n          <span\n            key={levelIndex}\n            className=\"LevelStar\"\n            style={style}\n            onClick={onLevelClick}\n          >\n            <span style={textStyle}>Level {levelIndex + 1}:</span> &nbsp;\n            <Star color={color} animation={animation} />\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction Star({ color, animation }) {\n  return (\n    <svg\n      className={`Star ${animation}`}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        style={{\n          fill: color,\n          stroke: 'white'\n        }}\n        d={[\n          \"M12\",\n          \".587l3.668\",\n          \"7.568\",\n          \"8.332\",\n          \"1.151-6.064\",\n          \"5.828\",\n          \"1.48\",\n          \"8.279-7.416-3.967-7.417\",\n          \"3.967\",\n          \"1.481-8.279-6.064-5.828\",\n          \"8.332-1.151z\",\n        ].join(\" \")}\n      />\n    </svg>\n  );\n}\n\nfunction KeySignature({ letter: key, children }) {\n  const [first, second] = key.split(\"\");\n  return (\n    <span>\n      {children}\n      {first}\n      <span className=\"KeyAugment\">{second || \"\"}</span>\n    </span>\n  );\n}\n\nfunction KeySignatureButtons({ letters, onClick }) {\n  return (\n    <div className=\"Answers\">\n      {letters.map((key) => (\n        <button key={key} onClick={onClick}>\n          <KeySignature letter={key} />\n        </button>\n      ))}\n    </div>\n  );\n}\n\nfunction Banner({ color, height, children }) {\n  return (\n    <div className=\"Result\" style={{ backgroundColor: color || \"lightgrey\" }}>\n      <div\n        style={{\n          position: \"relative\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          transition: \"0.5s\",\n          overflow: \"hidden\",\n          height: height || \"3rem\",\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n\nfunction LevelHeader({ score, remainingCount }) {\n  return (\n    <h2 style={{ fontWeight: 300, fontSize: '1.25rem', margin: '1rem' }}>\n      Score: {score || 0} ({remainingCount} left)\n    </h2>\n  );\n}\n\nfunction KeySignatureImage({ letter, clef, type }) {\n  const [first, second] = letter.split(\"\");\n  const cssSecond = (second || \"\").replace(\"#\", \"s\").replace(\"b\", \"f\");\n  const cssLetter = first + cssSecond;\n  const className = `${clef}-${cssLetter.toLowerCase()}-${type}`;\n\n  return (\n    <div className=\"KeySigImageContainer\">\n      <div className={`KeySigImage ${className}`} />\n    </div>\n  );\n}\n\nfunction Prize() {\n  return (\n    <a\n      href={prizeLink}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      style={{ color: \"white\" }}\n    >\n      Click here for prize!\n    </a>\n  );\n}\n\nfunction RobotoFont() {\n  return (\n    <Fragment>\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;500;900&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <style>{\"* { font-family: Roboto }\"}</style>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}