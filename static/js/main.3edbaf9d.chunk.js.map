{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["pickRandom","arr","Math","ceil","random","length","prizeLink","major_letters","sort","minor_letters","map","l","toLowerCase","types","clefs","fails","play","lastResult","type","letters","letter","clef","KeySignature","key","split","style","fontSize","App","useState","count","setState","cssLetter","i","replace","join","className","onClick","e","win","target","textContent","streak","lastLetter","background","visibility","undefined","href","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAGMA,EAAa,SAACC,GAAD,OAASA,EAAIC,KAAKC,KAAKD,KAAKE,SAAWH,EAAII,QAAU,IAKlEC,EACJ,mGAEIC,EAAgB,CACpB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7EC,OAEIC,EAAgB,CACpB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7EC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,iBAAeJ,OAEtBK,EAAQ,CAAC,MAAO,OAChBC,EAAQ,CAAC,SAAU,QACnBC,EAAQ,CAAC,QAAS,WAAY,KAAM,OAAQ,SAAU,QAAS,UAI/DC,EAAO,SAACC,GACZ,IAAMC,EAA0BL,EAHb,GAIbM,EAAmB,QAATD,EAAiBX,EAAgBE,EAC3CW,EAASpB,EAAWmB,GAG1B,MAAO,CAAEE,KAFIrB,EAAWc,GAETI,OAAME,SAAQD,UAASF,eAGxC,SAASK,EAAT,GAAuC,IAAPC,EAAM,EAAdH,OACtB,OACE,eAAC,WAAD,WAAWG,EAAIC,MAAM,IAAI,GAAG,sBAAMC,MAAO,CAACC,SAAU,UAAxB,SAAoCH,EAAIC,MAAM,IAAI,IAAM,QAiDzEG,MA7Cf,WACE,MAAgEC,mBAC9DZ,EAAK,CAACa,MAAO,KADf,0BAASR,EAAT,EAASA,KAAMH,EAAf,EAAeA,KAAME,EAArB,EAAqBA,OAAQD,EAA7B,EAA6BA,QAASF,EAAtC,EAAsCA,WAAca,EAApD,KAIMC,EAAYX,EAAOI,MAAM,IAAId,KACjC,SAACC,EAAGqB,GAAJ,OAAUA,EAAI,EAAIrB,EAAIA,EAAEsB,QAAQ,IAAK,KAAKA,QAAQ,IAAK,QACvDC,KAAK,IACDC,EAAS,UAAMd,EAAN,YAAcU,EAAUnB,cAAxB,YAAyCM,GAElDkB,EAAU,SAACC,GACf,IAAMC,EAAMD,EAAEE,OAAOC,cAAgBpB,EAC/BS,EAAQZ,EAAWY,MAAQ,EAC3BY,EAASH,GAAOrB,EAAWwB,QAAU,GAAK,EAAI,EAEpDX,EAASd,EAAK,CAAEa,QAAOY,SAAQH,MAAKI,WAAYtB,MAGlD,OACE,sBAAKe,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKA,UAAU,SAASV,MAAO,CAC3BkB,WAAY1B,EAAWqB,IAAM,QAAU,MACvCM,gBAA+BC,IAAnB5B,EAAWqB,IAAoB,UAAY,UAF3D,SAIE,8BAAMrB,EAAWqB,IACfrB,EAAWwB,OAAS,EAApB,UAA2BxB,EAAWwB,OAAtC,kBAA8D,QAD1D,UAECzC,EAAWe,GAFZ,cAEwBE,EAAWyB,gBAE3C,qBAAKP,UAAS,mBAAcA,KAC5B,qBAAKA,UAAU,UAAf,SACGhB,EAAQT,KAAI,SAACa,GAAD,OACX,wBAAkBa,QAASA,EAA3B,SACE,cAACd,EAAD,CAAcF,OAAQG,KADXA,WAMnB,mBAAGuB,KAAMxC,EAAWmB,MAAO,CAAEsB,QAAS,QAAtC,SACGzC,QCnEM0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3edbaf9d.chunk.js","sourcesContent":["import \"./App.css\";\nimport { Fragment, useState } from \"react\";\n\nconst pickRandom = (arr) => arr[Math.ceil(Math.random() * arr.length) - 1];\n\n// Streak score\n// Time multiplier\n\nconst prizeLink =\n  \"https://docs.google.com/document/d/1e8bCDXDnz1Y-qnNY2vTknYMVThinHRO2Ur9eF1V1DZk/edit?usp=sharing\";\n\nconst major_letters = [\n  \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"C#\", \"F#\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"Gb\",\n].sort();\n\nconst minor_letters = [\n  \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A#\", \"C#\", \"D#\", \"F#\", \"G#\", \"Ab\", \"Bb\", \"Eb\",\n].map(l => l.toLowerCase()).sort();\n\nconst types = [\"maj\", \"min\"];\nconst clefs = [\"treble\", \"bass\"];\nconst fails = ['Sorry', 'So close', ':(', 'Ouch', 'Whoops', 'Dang!', 'Answer']\n// const levels = ['Major', 'Minor', 'Mixed']\nconst currentLevel = 0\n\nconst play = (lastResult) => {\n  const type = currentLevel < 2 ? types[currentLevel] : pickRandom(types)\n  const letters = type === \"maj\" ? major_letters : minor_letters\n  const letter = pickRandom(letters)\n  const clef = pickRandom(clefs)\n\n  return { clef, type, letter, letters, lastResult }\n};\n\nfunction KeySignature ({letter: key}) {\n  return (\n    <Fragment>{key.split('')[0]}<span style={{fontSize: '0.75em'}}>{key.split('')[1] || ''}</span></Fragment>\n  )\n}\n\nfunction App() {\n  const [{ clef, type, letter, letters, lastResult }, setState] = useState(\n    play({count: 0})\n  )\n\n  const cssLetter = letter.split('').map(\n    (l, i) => i < 1 ? l : l.replace(\"#\", \"s\").replace(\"b\", \"f\")\n  ).join('')\n  const className = `${clef}-${cssLetter.toLowerCase()}-${type}`\n\n  const onClick = (e) => {\n    const win = e.target.textContent === letter\n    const count = lastResult.count + 1\n    const streak = win ? (lastResult.streak || 0) + 1 : 0\n\n    setState(play({ count, streak, win, lastLetter: letter }))\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className='Result' style={{\n            background: lastResult.win ? 'green' : 'red',\n            visibility: lastResult.win !== undefined ? 'inherit' : 'hidden'\n          }}>\n          <div>{lastResult.win ? (\n            lastResult.streak > 1 ? `${lastResult.streak} POINT STREAK!`: 'NICE!'\n          ) : `${pickRandom(fails)}...${lastResult.lastLetter}`}</div>\n        </div>\n        <div className={`App-logo ${className}`} />\n        <div className=\"Answers\">\n          {letters.map((key) => (\n            <button key={key} onClick={onClick}>\n              <KeySignature letter={key} />\n            </button>\n          ))}\n        </div>\n      </header>\n      <a href={prizeLink} style={{ display: \"none\" }}>\n        {prizeLink}\n      </a>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}