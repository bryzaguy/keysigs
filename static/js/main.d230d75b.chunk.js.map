{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["arr","major_letters","sort","className","Math","ceil","random","length","replace","toLowerCase","App","useState","map","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIAGmBA,E,6DAEbC,EAAgB,CACpB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC9B,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1CC,OAUIC,GARgB,CACpB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC9B,KAAM,KAAM,KAAM,KAClB,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9BD,QAXiBF,EAaOC,GAbIG,KAAKC,KAAKD,KAAKE,SAAWN,EAAIO,QAAU,GAe7CC,QAAQ,IAAK,KACbA,QAAQ,IAAK,KACbC,cAAgB,QAkB1BC,MAhBf,WACE,MAA0BC,mBAAS,GAAnC,mBACA,OADA,UAEE,qBAAKR,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKA,UAAS,0BAAqBA,KACnC,qBAAKA,UAAU,UAAf,SACGF,EAAcW,KACb,SAAAC,GAAG,OAAI,iCAASA,eClBbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d230d75b.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nconst pickRandom = arr => arr[Math.ceil(Math.random() * arr.length) - 1]\n\nconst major_letters = [\n  'A', 'B', 'C', 'D', 'E', 'F', 'G',\n  'C#', 'F#', 'Ab', 'Bb', 'Cb', 'Db', 'Eb', 'Gb'\n].sort()\n\nconst minor_letters = [\n  'A', 'B', 'C', 'D', 'E', 'F', 'G',\n  'A#', 'C#', 'D#', 'G#',\n  'Ab', 'Bb', 'Cb', 'Db', 'Eb', 'Gb'\n].sort()\n\nconst letter = pickRandom(major_letters)\n\nconst className = letter.replace('#', 's')\n                        .replace('b', 'f')\n                        .toLowerCase() + '-maj'\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className={`App-logo treble-${className}`} />\n        <div className=\"Answers\">\n          {major_letters.map(\n            key => <button>{key}</button>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}