{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["pickRandom","arr","Math","ceil","random","length","major_letters","sort","minor_letters","map","l","toLowerCase","types","clefs","fails","levels","currentLevel","gameComplete","solved","play","lastResult","type","letters","letter","filter","indexOf","clef","KeySignature","key","split","style","fontSize","pointerEvents","App","useState","count","setState","cssLetter","i","replace","join","className","onClick","e","win","target","textContent","streak","losses","push","min","lastLetter","rel","href","background","undefined","display","fontWeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c8dbca9.chunk.js","sourcesContent":["import \"./App.css\";\nimport { Fragment, useState } from \"react\";\n\nconst pickRandom = (arr) => arr[Math.ceil(Math.random() * arr.length) - 1];\n\n// Streak score\n// Time multiplier\n\nconst prizeLink =\n  \"https://docs.google.com/document/d/1e8bCDXDnz1Y-qnNY2vTknYMVThinHRO2Ur9eF1V1DZk/edit?usp=sharing\";\n\nconst major_letters = [\n  \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"C#\", \"F#\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"Gb\",\n].sort();\n\nconst minor_letters = [\n  \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A#\", \"C#\", \"D#\", \"F#\", \"G#\", \"Ab\", \"Bb\", \"Eb\",\n].map(l => l.toLowerCase()).sort();\n\nconst types = [\"maj\", \"min\"];\nconst clefs = [\"treble\", \"bass\"];\nconst fails = ['Sorry', 'So close', ':(', 'Ouch', 'Whoops', 'Oopsie', 'Dang', 'Answer', 'Bummer', 'Crap']\nconst levels = ['Major', 'Minor', 'Both']\n\n\nvar currentLevel = 0\nvar gameComplete = false\nvar solved = []\n\nconst play = (lastResult) => {\n  const type = currentLevel < 2 ? types[currentLevel] : pickRandom(types)\n  const letters = type === \"maj\" ? major_letters : minor_letters\n  const letter = pickRandom(letters.filter(l => solved.indexOf(l) === -1))\n  const clef = pickRandom(clefs)\n\n  return { clef, type, letter, letters, lastResult }\n};\n\nfunction KeySignature ({letter: key}) {\n  return (\n    <Fragment>{key.split('')[0]}<span style={{\n      fontSize: '0.75em', pointerEvents: 'none'\n    }}>{key.split('')[1] || ''}</span></Fragment>\n  )\n}\n\nfunction App() {\n  const [{ clef, type, letter, letters, lastResult }, setState] = useState(\n    play({count: 0})\n  )\n\n  const cssLetter = letter.split('').map(\n    (l, i) => i < 1 ? l : l.replace(\"#\", \"s\").replace(\"b\", \"f\")\n  ).join('')\n  const className = `${clef}-${cssLetter.toLowerCase()}-${type}`\n\n  const onClick = (e) => {\n    var win = e.target.textContent === letter\n    const count = lastResult.count + 1\n    const streak = win ? (lastResult.streak || 0) + 1 : 0\n    const losses = !win ? (lastResult.losses || 0) + 1 : 0\n    win && solved.push(letter)\n\n    if (solved.length === letters.length) {\n      solved = []\n      currentLevel = Math.min(currentLevel + 1, levels.length - 1)\n      gameComplete = gameComplete || currentLevel === levels.length - 1\n      setState(play({ count: 0 }))\n    } else {\n      setState(play({ count, streak, losses, win, lastLetter: letter }))\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" /> \n      <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;900&display=swap\" rel=\"stylesheet\"/>\n      <style>{'* { font-family: Roboto }'}</style>\n      <header className=\"App-header\">\n        <div className='Result' style={{\n            background: lastResult.win ? 'green' : (lastResult.win === undefined ? (gameComplete ? 'green' : 'inherit') : 'red'),\n          }}>\n          <div>{lastResult.win ? (\n            lastResult.streak > 1 ? `${lastResult.streak} POINT STREAK!`: 'NICE!'\n          ) : (gameComplete ? (\n            <a href={prizeLink} style={{ display: \"none\" }}>\n              Click here\n            </a>\n          ) : `${pickRandom(fails)}...${lastResult.lastLetter}`)}</div>\n        </div>\n        <h4 style={{fontWeight: 300}}>Level {currentLevel + 1}: {levels[currentLevel]}</h4>\n        <div className={`App-logo ${className}`} />\n        <div className=\"Answers\">\n          {letters.map((key) => (\n            <button key={key} onClick={onClick}>\n              <KeySignature letter={key} />\n            </button>\n          ))}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}